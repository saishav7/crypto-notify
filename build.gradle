buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath('com.google.cloud.tools:appengine-gradle-plugin:1.+')
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'


group = 'io.saishav'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    maven {
        url 'https://maven-central.storage.googleapis.com'// Google's mirror of Maven Central
    }
    jcenter()
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("io.github.microutils:kotlin-logging:1.6.10")
    compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.0")
    compile("net.gpedro.integrations.slack:slack-webhook:1.3.0")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+")
    compile("com.google.appengine:appengine-api-1.0-sdk:+")
    providedCompile("javax.servlet:javax.servlet-api:3.1.0")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    exclude group: 'org.slf4j', module: 'jul-to-slf4j'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

appengine {
    deploy {
        appEngineDirectory = 'src/main/resources'
    }
}

